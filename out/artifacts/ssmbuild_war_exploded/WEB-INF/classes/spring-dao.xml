<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx">
    <!--    关联数据库配置文件 这样数据库文件就可以通过spring来读 之前用mybatis来读 写死-->
    <context:property-placeholder location="classpath:database.properties"/>
    <!--    连接池
    dbcp：半自动不能自动连接 c3p0：自动化操作自动加载配置文件自动设置到对象中 druid -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${jdbc.driver}"/>
        <property name="jdbcUrl" value="${jdbc.url}"/>
        <property name="user" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>

        <!--        私有属性-->
        <property name="maxPoolSize" value="30"/>
        <property name="minPoolSize" value="10"/>
        <!--        关闭连接后不自动commit-->
        <property name="autoCommitOnClose" value="false"/>
        <!--        获取连接超时时间-->
        <property name="checkoutTimeout" value="10000"/>
        <!--        连接失败重试次数-->
        <property name="acquireRetryAttempts" value="2"/>

    </bean>
    <!--    sqlsessionFactory-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!--                  绑定mybatis的配置文件-->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <!--        配置dao接口扫描包 动态实现dao接口可以注入到spring容器 -->
    </bean>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
<!--        没有必要在 Spring 的 XML 配置文件中注册所有的映射器。相反,你可以使用一个 MapperScannerConfigurer ,
它 将 会 查 找 类 路 径 下 的 映 射 器 并 自 动 将 它 们 创 建 成 MapperFactoryBean。-->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
<!--       要扫描的dao包 写完这个以前写的实现类都不用写了-->
        <property name="basePackage" value="com.dahua.dao"/>
<!--        配置事务切入-->




    </bean>
</beans>